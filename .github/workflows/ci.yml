name: CI

on: push

jobs:
  test:
    runs-on: ubuntu-20.04
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ['26.2.5']
        elixir: ['1.16.3']

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: animina_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Install dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix compile

      - name: Create and migrate database
        env:
          MIX_ENV: test
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: animina_test
        run: |
          mix ecto.create
          mix ecto.migrate

      # - name: Run tests
      #   env:
      #     MIX_ENV: test
      #     PGHOST: localhost
      #     PGUSER: postgres
      #     PGPASSWORD: postgres
      #     PGDATABASE: animina_test
      #   run: |
      #     mix test']
        elixir: ['1.16.3']

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: animina_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Install dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix compile

      - name: Create and migrate database
        env:
          MIX_ENV: test
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: animina_test
        run: |
          mix ecto.create
          mix ecto.migrate

      # - name: Run tests
      #   env:
      #     MIX_ENV: test
      #     PGHOST: localhost
      #     PGUSER: postgres
      #     PGPASSWORD: postgres
      #     PGDATABASE: animina_test
      #   run: |
      #     mix test

# Name of your application. Used to uniquely configure containers.
service: animina

<% require "dotenv"; Dotenv.load(".env") %>

# Name of the container image.
image: animina/animina

# Deploy to these servers.
servers:
  web:
    hosts:
      - <%= ENV["DEV_SERVER_IP"] %>
    options:
      publish: PORT:4000
    proxy: false

# Credentials for your image host.
registry:
  server: ghcr.io
  username:
    - KAMAL_REGISTRY_USERNAME
  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
# builder:
#   arch: amd64

builder:
  local: false
  arch: amd64
  driver: docker-container
  remote: <%= ENV["REMOTE_BUILDER_SSH_URL"] %>

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  clear:
    PORT: 4000
    MIX_ENV: prod
  secret:
    - <%= ENV["DEV_DATABASE_URL"] %>
    - <%= ENV["DEV_SECRET_KEY_BASE"] %>
    - <%= ENV["DEV_PHX_HOST"] %>
    - <%= ENV["DISABLE_ML_FEATURES"] %>
# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
ssh:
  user: root
# Use a persistent storage volume.
#
# volumes:
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2
